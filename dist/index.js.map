{"version":3,"file":"index.js","sources":["../webpack://typescript-action/webpack/runtime/compat","../webpack://typescript-action/./lib/main.js"],"sourcesContent":["\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = new URL('.', import.meta.url).pathname.slice(import.meta.url.match(/^file:\\/\\/\\/\\w:/) ? 1 : 0, -1) + \"/\";","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.run = run;\n/* eslint-disable sort-imports */\nconst core = __importStar(require(\"@actions/core\"));\nconst action_1 = require(\"@octokit/action\");\nconst client_1 = require(\"./client\");\nconst chatgptClient_1 = require(\"./chatgptClient\");\nconst prompt_1 = require(\"./prompt\");\nconst utils_1 = require(\"./utils\");\nconst octokit = new action_1.Octokit();\nfunction run() {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            core.debug(\"Start Running gpt action\");\n            const extensions = core.getInput('extensions').split(',');\n            const pullNumber = parseInt(core.getInput('number'));\n            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');\n            core.debug(`Owner: ${owner}, Repo: ${repo}`);\n            const files = yield octokit.request(`GET /repos/${owner}/${repo}/pulls/${pullNumber}/files`);\n            core.debug(`Files: ${files.data}`);\n            for (const file of files.data) {\n                const extension = file.filename.split('.').pop();\n                if (extensions.includes(extension)) {\n                    core.debug(`File.raw_url: $${file.raw_url}`);\n                    const text = yield (0, client_1.getRawFileContent)(file.raw_url);\n                    const textWithLineNumber = (0, utils_1.addLineNumbers)(text);\n                    if (process.env.CODEGUARD_COMMENT_BY_LINE) {\n                        const changedLines = (0, utils_1.getChangedLineNumbers)(file.patch);\n                        const suggestions = yield (0, chatgptClient_1.getSuggestions)(textWithLineNumber, changedLines);\n                        (0, utils_1.validateSuggestions)(suggestions);\n                        yield (0, client_1.processSuggestions)(file, suggestions, owner, repo, pullNumber, octokit, changedLines);\n                    }\n                    else {\n                        const response = yield (0, chatgptClient_1.sendPostRequest)({\n                            prompt: (0, prompt_1.promptForText)(file.filename, textWithLineNumber)\n                        });\n                        yield (0, client_1.postCommentToPR)(owner, repo, pullNumber, response.message.content.parts[0], octokit);\n                    }\n                }\n            }\n        }\n        catch (error) {\n            if (error instanceof Error)\n                core.debug(error.message);\n        }\n    });\n}\nrun();\n"],"mappings":";;AAAA;AACA;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;","sourceRoot":""}